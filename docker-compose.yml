version: '3.8'

# Define common environment variables
x-env: &env
  env_file: .env
  environment:
    - PYTHONUNBUFFERED=1
    - PYTHONPATH=/app
    - LOG_LEVEL=${LOG_LEVEL:-INFO}
    - DEBUG=${DEBUG:-False}
    - OMP_NUM_THREADS=1
    - MKL_NUM_THREADS=1
    - NUMEXPR_NUM_THREADS=1

services:
  scraperllm:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-scraperllm}-app
    hostname: scraperllm-app
    restart: unless-stopped
    stop_grace_period: 30s
    stop_signal: SIGTERM
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    <<: *env
    networks:
      - scraperllm-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME:-scraperllm}-nginx
    hostname: nginx
    restart: unless-stopped
    depends_on:
      scraperllm:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./data/certs:/etc/letsencrypt
      - ./data/nginx/logs:/var/log/nginx
    networks:
      - scraperllm-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  scraperllm-network:
    driver: bridge
