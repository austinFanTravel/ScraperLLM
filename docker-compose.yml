version: '3.8'

# Define environment variables from .env file
x-env: &env
  env_file: .env
  environment:
    - PYTHONUNBUFFERED=1
    - PYTHONPATH=/app
    - LOG_LEVEL=${LOG_LEVEL:-INFO}
    - DEBUG=${DEBUG:-False}

services:
  scraperllm:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=${DEVELOPMENT:-False}
    container_name: ${COMPOSE_PROJECT_NAME:-scraperllm}-app
    hostname: scraperllm-app
    restart: unless-stopped
    stop_grace_period: 30s
    stop_signal: SIGTERM
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    <<: *env
    networks:
      - scraperllm-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME:-scraperllm}-nginx
    hostname: nginx
    restart: unless-stopped
    depends_on:
      scraperllm:
        condition: service_healthy
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./data/logs/nginx:/var/log/nginx
      - ./static:/app/static:ro
    networks:
      - scraperllm-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  # Uncomment and configure if you need Redis
  # redis:
  #   image: redis:alpine
  #   container_name: ${COMPOSE_PROJECT_NAME:-scraperllm}-redis
  #   restart: unless-stopped
  #   command: redis-server --requirepass ${REDIS_PASSWORD:-your_secure_password}
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - scraperllm-network
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

networks:
  scraperllm-network:
    driver: bridge
    driver_opts:
      encrypted: ''
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

# Uncomment if using Redis volumes
# volumes:
#   redis_data:
#     driver: local
#     name: ${COMPOSE_PROJECT_NAME:-scraperllm}-redis-data
